#!/usr/bin/env bash

#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if [ -z "${JMEDIA_HOME}" ]; then
  export JMEDIA_HOME="$(cd "`dirname "$0"`"/..; pwd)"
fi


# Find the java binary
if [ -n "${JAVA_HOME}" ]; then
  RUNNER="${JAVA_HOME}/bin/java"
else
  if [ `command -v java` ]; then
    RUNNER="java"
  else
    echo "JAVA_HOME is not set" >&2
    exit 1
  fi
fi
echo "${RUNNER}"

# Find assembly jar
JMEDIA_ASSEMBLY_JAR=
ASSEMBLY_DIR="${JMEDIA_HOME}/lib"

ASSEMBLY_JARS="."
for jar in $(ls ${ASSEMBLY_DIR})
do
  ASSEMBLY_JARS="${ASSEMBLY_JARS}:${ASSEMBLY_DIR}/${jar}"
done


JMEDIA_ASSEMBLY_JAR="${ASSEMBLY_JARS}"

LAUNCH_CLASSPATH="$JMEDIA_ASSEMBLY_JAR"



# The launcher library will print arguments separated by a NULL character, to allow arguments with
# characters that would be otherwise interpreted by the shell. Read that in a while loop, populating
# an array that will be used to exec the final command.
exec "$RUNNER" -Dio.netty.leakDetection.level=PARANOID -Dio.netty.allocator.type=pooled -Dio.netty.noPreferDirect=false -Dlog4j.configuration=file:${JMEDIA_HOME}/config/log4j.properties -cp "$LAUNCH_CLASSPATH" com.sengled.cloud.MediaServer "${JMEDIA_HOME}/config/server.xml"  "$@"

